{"version":3,"file":"static/js/37.6ffb04b4.chunk.js","mappings":"wZAGaA,EAAOC,EAAAA,EAAAA,IAAH,4GAOJC,EAAWD,EAAAA,EAAAA,IAAH,4IAcRE,GANWF,EAAAA,EAAAA,IAAH,6FAMDA,EAAAA,EAAAA,GAAH,0IAQJG,EAAOH,EAAAA,EAAAA,GAAH,+HAOJI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,8NAaVM,EAASN,EAAAA,EAAAA,OAAH,kVAkBNO,GAAgBP,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,sHAQbQ,EAAQR,EAAAA,EAAAA,GAAH,+DAKLS,EAAYT,EAAAA,EAAAA,GAAH,uF,+HChFTI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qKAUVQ,EAAQR,EAAAA,EAAAA,GAAH,6C,2BCWlB,EAnBa,WACX,OACE,iCACE,2BACE,SAACQ,EAAD,uCACA,yBACE,SAACJ,EAAD,CAAYM,GAAG,OAAf,qBAEF,yBACE,SAACN,EAAD,CAAYM,GAAG,UAAf,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,E,SC2CD,EA1DoB,WAAO,IAAD,IACxB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAChDC,EAAAA,EAAAA,YAAU,WACJR,IACFD,GAAa,IACbU,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GAAI,OAAId,EAASc,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQjB,GAAa,IAE3B,GAAE,CAACC,IAEJ,IACMiB,EADO,IAAIC,KAAKtB,EAAMuB,cACVC,cACZC,EAAQC,KAAKC,MAAM3B,EAAM4B,cAEvBC,EAAkD7B,EAAlD6B,eAAgBC,EAAkC9B,EAAlC8B,SAAUC,EAAwB/B,EAAxB+B,YAAaC,EAAWhC,EAAXgC,OAC/C,OACE,gCACG9B,IAAa,SAACJ,EAAA,EAAD,KACd,SAAC,KAAD,CAAQmC,KAAK,SAAb,UACE,SAAC,KAAD,CAAetC,GAAIa,EAAS0B,QAA5B,wBAEF,UAAC,KAAD,YACE,0BACE,gBACEC,IACEJ,EAAW,0CAC4BA,GACnC,QAENK,IAAI,iBACJC,MAAM,WAGV,UAAC,KAAD,YACE,0BACGR,GACD,gCAAQR,EAAR,WAEF,wCAAwB,GAARI,EAAhB,QACA,sCACA,6BAAKK,MACL,wBACE,oCAEDE,GAAUA,EAAOM,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,OAC5C,wBAGJ,SAAC,EAAD,MAGL,C","sources":["pages/Detals.styled.js","components/Menu/Menu.styled.js","components/Menu/Menu.jsx","pages/MovieDetals.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* align-items: center;\n  justify-content: start; */\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 20px auto;\n  margin-bottom: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  border: 1px solid whitesmoke;\n  justify-content: space-around;\n\n  width: calc(((90%-60px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  color: whitesmoke;\n  transition: color 250ms linear;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  /* display: block; */\n  border: none;\n  border-radius: 50%;\n  color: orangered;\n  width: 60px;\n  height: 35px;\n  border: solid 1px orangered;\n  background-color: #333333;\n  margin-bottom: 5px;\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n\nexport const StyledBtnLink = styled(NavLink)`\n  color: orangered;\n  transition: color 250ms linear;\n  :hover {\n    color: #333333;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  margin: 0 14px;\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: 28px;\n  color: whitesmoke;\n  margin: 10px auto;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 22px;\n  margin-bottom: 16px;\n  color: whitesmoke;\n  transition: color 250ms linear;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { StyledLink, Title } from './Menu.styled';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst Menu = () => {\n  return (\n    <>\n      <ul>\n        <Title>Additional informathion</Title>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Menu;\n","import { ApiDetalsMovies } from 'components/ApiUrl/ApiURL';\nimport Menu from 'components/Menu/Menu';\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Button, StyledBtnLink, Wrap, WrapText } from './Detals.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetals = () => {\n  const [movie, setMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    if (movieId) {\n      setIsLoading(true);\n      ApiDetalsMovies(movieId)\n        .then(data => setMovie(data))\n        .catch(error => console.log(error))\n        .finally(setIsLoading(false));\n    }\n  }, [movieId]);\n\n  const date = new Date(movie.release_date);\n  const year = date.getFullYear();\n  const score = Math.round(movie.vote_average);\n\n  const { original_title, overview, poster_path, genres } = movie;\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Button type=\"button\">\n        <StyledBtnLink to={backLink.current}>To back</StyledBtnLink>\n      </Button>\n      <Wrap>\n        <div>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'Sorry'\n            }\n            alt=\"original_title\"\n            width=\"250\"\n          />\n        </div>\n        <WrapText>\n          <h2>\n            {original_title}\n            <span>({year})</span>\n          </h2>\n          <p>User score: {score * 10}%</p>\n          <h3>Overview</h3>\n          <p> {overview}</p>\n          <p>\n            <b>Genres</b>\n          </p>\n          {genres && genres.map(gen => gen.name).join(', ')}\n          <p></p>\n        </WrapText>\n      </Wrap>\n      <Menu />\n    </>\n  );\n};\nexport default MovieDetals;\n"],"names":["Wrap","styled","WrapText","List","Item","StyledLink","NavLink","Button","StyledBtnLink","Title","MainTitle","to","Suspense","fallback","Loader","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","ApiDetalsMovies","then","data","catch","error","console","log","finally","year","Date","release_date","getFullYear","score","Math","round","vote_average","original_title","overview","poster_path","genres","type","current","src","alt","width","map","gen","name","join"],"sourceRoot":""}