{"version":3,"file":"static/js/37.bb613cc0.chunk.js","mappings":"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","sources":["components/ApiUrl/ApiURL.jsx","pages/Detals.styled.js","components/Menu/Menu.styled.js","components/Menu/Menu.jsx","pages/MovieDetals.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const KEY = 'dc938579c590d583322532c91001c2e3';\n\nexport const ApiTrendMovies = async () => {\n  try {\n    const responce = await axios.get(`${URL}trending/movie/day?api_key=${KEY}`);\n    console.log(responce.data.results);\n    return responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiDetalsMovies = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiCastActors = async castId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${castId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiReviewsMovies = async reviewId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${reviewId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* align-items: center;\n  justify-content: start; */\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid whitesmoke;\n  justify-content: space-around;\n  padding: 10px;\n  width: calc(((80%-80px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: whitesmoke;\n  :hover {\n    color: orangered;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 22px;\n  margin-bottom: 14px;\n  color: whitesmoke;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { StyledLink } from './Menu.styled';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst Menu = () => {\n  return (\n    <>\n      <ul>\n        <h2>Additional informathion</h2>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Menu;\n","import { ApiDetalsMovies } from 'components/ApiUrl/ApiURL';\nimport Menu from 'components/Menu/Menu';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { Wrap, WrapText } from './Detals.styled';\n\nconst MovieDetals = () => {\n  const [movie, setMovie] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    if (movieId) {\n      ApiDetalsMovies(movieId)\n        .then(data => setMovie(data))\n        .catch(error => console.log(error));\n    }\n  }, [movieId]);\n\n  const date = new Date(movie.release_date);\n  const year = date.getFullYear();\n  const score = Math.round(movie.vote_average);\n\n  const { original_title, overview, poster_path, genres } = movie;\n  return (\n    <>\n      <button type=\"button\">\n        <Link to={backLink.current}>On the main</Link>\n      </button>\n      <Wrap>\n        <div>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'Sorry'\n            }\n            alt=\"original_title\"\n            width=\"250\"\n          />\n        </div>\n        <WrapText>\n          <h2>\n            {original_title}\n            <span>({year})</span>\n          </h2>\n          <p>User score: {score * 10}%</p>\n          <h3>Overview</h3>\n          <p> {overview}</p>\n          <p>\n            <b>Genres</b>\n          </p>\n          {genres && genres.map(gen => gen.name).join(', ')}\n          <p></p>\n        </WrapText>\n      </Wrap>\n      <Menu />\n    </>\n  );\n};\nexport default MovieDetals;\n"],"names":["URL","KEY","ApiTrendMovies","axios","responce","console","log","data","results","ApiSearchMovies","query","response","ApiDetalsMovies","id","ApiCastActors","castId","ApiReviewsMovies","reviewId","Wrap","styled","WrapText","List","Item","StyledLink","NavLink","to","Suspense","fallback","Loader","useState","movie","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","then","catch","error","year","Date","release_date","getFullYear","score","Math","round","vote_average","original_title","overview","poster_path","genres","type","current","src","alt","width","map","gen","name","join"],"sourceRoot":""}