{"version":3,"file":"static/js/380.c7e72895.chunk.js","mappings":"mTAEaA,EAAM,gCACNC,EAAM,mCAENC,EAAc,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,IAF3C,cAEpBG,EAFoB,OAG1BC,QAAQC,IAAIF,EAASG,KAAKC,SAHA,kBAInBJ,EAASG,MAJU,gCAM1BF,QAAQC,IAAR,MAN0B,yDAAH,qDAUdG,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACSC,EADT,4DACgES,IAH5D,cAErBC,EAFqB,yBAKpBA,EAASJ,MALW,gCAO3BF,QAAQC,IAAR,MAP2B,yDAAH,sDAWfM,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNa,EADM,oBACQZ,EADR,oBAFI,cAErBU,EAFqB,yBAKpBA,EAASJ,MALW,gCAO3BF,QAAQC,IAAR,MAP2B,yDAAH,sDAWfQ,EAAa,mCAAG,WAAMC,GAAN,gGAEFZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNe,EADM,4BACoBd,EADpB,oBAFE,cAEnBU,EAFmB,yBAKlBA,EAASJ,MALS,gCAOzBF,QAAQC,IAAR,MAPyB,yDAAH,sDAWbU,EAAgB,mCAAG,WAAMC,GAAN,gGAELd,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNiB,EADM,4BACsBhB,EADtB,2BAFK,cAEtBU,EAFsB,OAK5BN,QAAQC,IAAIK,EAASJ,MALO,kBAMrBI,EAASJ,MANY,gCAQ5BF,QAAQC,IAAR,MAR4B,yDAAH,qD,yJC3BhBY,GAlBOC,EAAAA,EAAAA,IAAH,gFAMOA,EAAAA,EAAAA,IAAH,mFAMGA,EAAAA,EAAAA,IAAH,6FAMDA,EAAAA,EAAAA,GAAH,+GAOJC,EAAOD,EAAAA,EAAAA,GAAH,oO,IAYSA,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sF,QCSvB,EA1Ca,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACJF,IACFX,EAAAA,EAAAA,IAAcW,GACXG,MAAK,SAAArB,GAAI,OAAIiB,EAAUjB,EAAKsB,KAAnB,IACTC,OAAM,SAAAC,GAAK,OAAI1B,QAAQC,IAAIyB,EAAhB,GAEjB,GAAE,CAACN,KAEF,+BACE,SAACP,EAAD,UACGK,EAAOS,OAAS,EACbT,EAAOU,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,UAACjB,EAAD,YACE,gBACEkB,IACED,EAAY,0CAC2BA,G,qqSAGzCE,IAAKJ,EACLK,MAAM,SAER,4BACE,wBAAKL,KACL,0BACE,sCADF,IACqBC,UAbdF,EAkBd,IACD,2BAIX,C","sources":["components/ApiUrl/ApiURL.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const KEY = 'dc938579c590d583322532c91001c2e3';\n\nexport const ApiTrendMovies = async () => {\n  try {\n    const responce = await axios.get(`${URL}trending/movie/day?api_key=${KEY}`);\n    console.log(responce.data.results);\n    return responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiDetalsMovies = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiCastActors = async castId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${castId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiReviewsMovies = async reviewId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${reviewId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  justify-content: space-around;\n  gap: 10px;\n  border: 1px solid whitesmoke;\n  padding: 10px;\n  width: calc(((80%-80px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: whitesmoke;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { ApiCastActors } from 'components/ApiUrl/ApiURL';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport iconHuman from '../../images/iconHuman.png';\nimport { Item, List } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      ApiCastActors(movieId)\n        .then(data => setActors(data.cast))\n        .catch(error => console.log(error));\n    }\n  }, [movieId]);\n  return (\n    <>\n      <List>\n        {actors.length > 0\n          ? actors.map(({ cast_id, name, character, profile_path }) => {\n              return (\n                <Item key={cast_id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                        : iconHuman\n                    }\n                    alt={name}\n                    width=\"200\"\n                  />\n                  <div>\n                    <h3>{name}</h3>\n                    <p>\n                      <b>Character:</b> {character}\n                    </p>\n                  </div>\n                </Item>\n              );\n            })\n          : 'Sorry, cast not found'}\n      </List>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["URL","KEY","ApiTrendMovies","axios","responce","console","log","data","results","ApiSearchMovies","query","response","ApiDetalsMovies","id","ApiCastActors","castId","ApiReviewsMovies","reviewId","List","styled","Item","NavLink","useState","actors","setActors","movieId","useParams","useEffect","then","cast","catch","error","length","map","cast_id","name","character","profile_path","src","alt","width"],"sourceRoot":""}