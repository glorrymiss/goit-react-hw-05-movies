{"version":3,"file":"static/js/415.12a8f59f.chunk.js","mappings":"yZAGaA,EAAOC,EAAAA,EAAAA,IAAH,4GAOJC,EAAWD,EAAAA,EAAAA,IAAH,4IAcRE,GANWF,EAAAA,EAAAA,IAAH,6FAMDA,EAAAA,EAAAA,GAAH,0IAQJG,EAAOH,EAAAA,EAAAA,GAAH,+HAOJI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,8NAaVM,EAASN,EAAAA,EAAAA,OAAH,kVAkBNO,GAAgBP,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,sHAQbQ,EAAQR,EAAAA,EAAAA,GAAH,+DAKLS,EAAYT,EAAAA,EAAAA,GAAH,uF,sFC1CtB,UAnCa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,iCACE,SAAC,KAAD,8BACA,SAAC,KAAD,UACGR,EAAOW,QACNX,EAAOY,KAAI,WAA6BC,GAAW,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YACvB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,iBAAYF,GAA1B,WACE,gBACEG,IACEF,EAAW,0CAC4BA,GACnCG,EAENC,IAAKN,EACLO,MAAM,SAER,SAAC,KAAD,UAAQP,QAXDD,EAed,QAIV,C","sources":["pages/Detals.styled.js","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* align-items: center;\n  justify-content: start; */\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 20px auto;\n  margin-bottom: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  border: 1px solid whitesmoke;\n  justify-content: space-around;\n\n  width: calc(((90%-60px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  color: whitesmoke;\n  transition: color 250ms linear;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  /* display: block; */\n  border: none;\n  border-radius: 50%;\n  color: orangered;\n  width: 60px;\n  height: 35px;\n  border: solid 1px orangered;\n  background-color: #333333;\n  margin-bottom: 5px;\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n\nexport const StyledBtnLink = styled(NavLink)`\n  color: orangered;\n  transition: color 250ms linear;\n  :hover {\n    color: #333333;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  margin: 0 14px;\n`;\n\nexport const MainTitle = styled.h1`\n  font-size: 28px;\n  color: whitesmoke;\n  margin: 10px auto;\n`;\n","import { ApiTrendMovies } from '../components/ApiUrl/ApiURL';\n\nimport { useEffect, useState } from 'react';\nimport { Item, List, MainTitle, StyledLink, Title } from './Detals.styled';\nimport img from '../images/img.jpg';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    ApiTrendMovies()\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <>\n      <MainTitle>Trending Today</MainTitle>\n      <List>\n        {movies.length &&\n          movies.map(({ title, id, poster_path }, index) => {\n            return (\n              <Item key={index}>\n                <StyledLink to={`movies/${id}`}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : img\n                    }\n                    alt={title}\n                    width=\"200\"\n                  />\n                  <Title>{title}</Title>\n                </StyledLink>\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\nexport default Home;\n"],"names":["Wrap","styled","WrapText","List","Item","StyledLink","NavLink","Button","StyledBtnLink","Title","MainTitle","useState","movies","setMovies","useEffect","ApiTrendMovies","then","data","results","catch","error","console","log","length","map","index","title","id","poster_path","to","src","img","alt","width"],"sourceRoot":""}