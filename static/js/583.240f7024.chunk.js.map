{"version":3,"file":"static/js/583.240f7024.chunk.js","mappings":"qWAGaA,EAAOC,EAAAA,EAAAA,IAAH,gFAMJC,EAAWD,EAAAA,EAAAA,IAAH,4IAcRE,GANWF,EAAAA,EAAAA,IAAH,6FAMDA,EAAAA,EAAAA,GAAH,kHAOJG,EAAOH,EAAAA,EAAAA,GAAH,kOAWJI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,yHAQVM,EAASN,EAAAA,EAAAA,OAAH,kVAkBNO,GAAgBP,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qH,0HCjEbQ,EAAOR,EAAAA,EAAAA,KAAH,gDAIJS,EAAQT,EAAAA,EAAAA,MAAH,4LAWLM,EAASN,EAAAA,EAAAA,OAAH,oS,2BCuBnB,EApCe,SAAC,GAAgB,IAAdU,EAAa,EAAbA,OAChB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OACE,UAACL,EAAD,CAAMM,SAba,SAAAC,GACnBA,EAAMC,iBAEmB,KAArBJ,EAAUK,QAMdP,EAAOE,GACPC,EAAa,KANXK,IAAAA,OAAAA,QAAwB,qCAO3B,EAEC,WACE,SAACT,EAAD,CACEU,KAAK,OACLC,KAAK,YACLC,SArBc,SAAAN,GAClBF,EAAaE,EAAMO,cAAcC,MAAMC,cACxC,EAoBKD,MAAOX,EACPa,YAAY,yBAEd,SAACnB,EAAD,CAAQa,KAAK,SAAb,sBAGL,E,mCCgCD,EA3DmB,WAAO,IAAD,EACvB,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOe,EAAP,KAAqBC,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAErCC,GAAWC,EAAAA,EAAAA,MAyBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GACAA,EAAKC,QAAQC,QAAU,EACzBtB,IAAAA,OAAAA,QACE,+CAIJS,EAAgBW,EAAKC,QACtB,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEjB,GAAE,CAACX,KAGF,iCACE,SAAC,EAAD,CAAQrB,OAzBa,SAAAE,GACvB,GAAkB,KAAdA,EACF,OAAOkB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOnB,GAC1B,KAqBG,SAAC,KAAD,UACGc,GACCA,EAAamB,KAAI,WAA6BC,GAAW,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAE7B,OADAN,QAAQC,IAAII,IAEV,UAAC,KAAD,YACE,gBACEE,IACED,EAAW,0CAC4BA,GACnCE,EAENC,IAAKL,EACLM,MAAM,SAER,SAAC,KAAD,CAAYC,GAAE,UAAKN,GAAMO,MAAO,CAAEC,KAAMvB,GAAxC,SACGc,MAXMD,EAed,QAIV,C","sources":["pages/Detals.styled.js","components/Movies/Movies.styled.js","components/Movies/Movies.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* align-items: center;\n  justify-content: start; */\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 20px auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid whitesmoke;\n  justify-content: space-around;\n  padding: 10px;\n  width: calc(((80%-80px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: whitesmoke;\n  transition: color 250ms linear;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  /* display: block; */\n  border: none;\n  border-radius: 50%;\n  color: orangered;\n  width: 60px;\n  height: 35px;\n  border: solid 1px orangered;\n  background-color: #333333;\n  margin-bottom: 5px;\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n\nexport const StyledBtnLink = styled(NavLink)`\n  color: orangered;\n  transition: color 250ms linear;\n  :hover {\n    color: #333333;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 20px 200px;\n`;\n\nexport const Input = styled.input`\n  min-width: 250px;\n  min-height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  margin: 0 10px;\n  padding-left: 8px;\n  padding-right: 8px;\n`;\n\nexport const Button = styled.button`\n  /* display: block; */\n  border: none;\n  border-radius: 50%;\n  color: orangered;\n  width: 60px;\n  height: 35px;\n  transition: color 250ms linear, background-color 250ms linear;\n  :hover,\n  :focus {\n    color: #333333;\n    background-color: orangered;\n  }\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input } from './Movies.styled';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nconst Movies = ({ submit }) => {\n  const [nameValue, setNameValue] = useState('');\n\n  const hendleInput = event => {\n    setNameValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n\n    if (nameValue.trim() === '') {\n      Notiflix.Notify.failure('Please enter the name of the movie');\n\n      return;\n    }\n\n    submit(nameValue);\n    setNameValue('');\n  };\n  return (\n    <Form onSubmit={hendleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"nameValue\"\n        onChange={hendleInput}\n        value={nameValue}\n        placeholder=\"Enter name movie...\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nMovies.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\nexport default Movies;\n","import { ApiSearchMovies } from 'components/ApiUrl/ApiURL';\nimport Movies from 'components/Movies/Movies';\nimport Notiflix from 'notiflix';\n\nimport { useEffect, useState } from 'react';\nimport { Item, List, StyledLink } from './Detals.styled';\nimport image from '../images/image.jpg';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nconst MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const hendleTakeSubmit = nameValue => {\n    if (nameValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: nameValue });\n  };\n\n  useEffect(() => {\n    if (query) {\n      ApiSearchMovies(query)\n        .then(data => {\n          if (data.results.length <= 0) {\n            Notiflix.Notify.failure(\n              ' Find nothing... Please input correct value'\n            );\n            return;\n          }\n          setSearchMovies(data.results);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [query]);\n\n  return (\n    <>\n      <Movies submit={hendleTakeSubmit} />\n      <List>\n        {searchMovies &&\n          searchMovies.map(({ title, id, poster_path }, index) => {\n            console.log(id);\n            return (\n              <Item key={index}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : image\n                  }\n                  alt={title}\n                  width=\"200\"\n                />\n                <StyledLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </StyledLink>\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["Wrap","styled","WrapText","List","Item","StyledLink","NavLink","Button","StyledBtnLink","Form","Input","submit","useState","nameValue","setNameValue","onSubmit","event","preventDefault","trim","Notiflix","type","name","onChange","currentTarget","value","toLowerCase","placeholder","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","ApiSearchMovies","then","data","results","length","catch","error","console","log","map","index","title","id","poster_path","src","image","alt","width","to","state","from"],"sourceRoot":""}