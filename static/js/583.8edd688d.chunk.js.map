{"version":3,"file":"static/js/583.8edd688d.chunk.js","mappings":"mTAEaA,EAAM,gCACNC,EAAM,mCAENC,EAAc,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,IAF3C,cAEpBG,EAFoB,OAG1BC,QAAQC,IAAIF,EAASG,KAAKC,SAHA,kBAInBJ,EAASG,MAJU,gCAM1BF,QAAQC,IAAR,MAN0B,yDAAH,qDAUdG,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACSC,EADT,4DACgES,IAH5D,cAErBC,EAFqB,yBAKpBA,EAASJ,MALW,gCAO3BF,QAAQC,IAAR,MAP2B,yDAAH,sDAWfM,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNa,EADM,oBACQZ,EADR,oBAFI,cAErBU,EAFqB,yBAKpBA,EAASJ,MALW,gCAO3BF,QAAQC,IAAR,MAP2B,yDAAH,sDAWfQ,EAAa,mCAAG,WAAMC,GAAN,gGAEFZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNe,EADM,4BACoBd,EADpB,oBAFE,cAEnBU,EAFmB,yBAKlBA,EAASJ,MALS,gCAOzBF,QAAQC,IAAR,MAPyB,yDAAH,sDAWbU,EAAgB,mCAAG,WAAMC,GAAN,gGAELd,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNiB,EADM,4BACsBhB,EADtB,2BAFK,cAEtBU,EAFsB,OAK5BN,QAAQC,IAAIK,EAASJ,MALO,kBAMrBI,EAASJ,MANY,gCAQ5BF,QAAQC,IAAR,MAR4B,yDAAH,qD,qMC7ChBY,EAAOC,EAAAA,EAAAA,IAAH,gFAMJC,EAAWD,EAAAA,EAAAA,IAAH,4IAcRE,GANWF,EAAAA,EAAAA,IAAH,6FAMDA,EAAAA,EAAAA,GAAH,+GAOJG,EAAOH,EAAAA,EAAAA,GAAH,kOAWJI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qF,4HCvCVM,EAAQN,EAAAA,EAAAA,MAAH,2IASLO,EAASP,EAAAA,EAAAA,OAAH,+I,SC0BnB,EAlCe,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OAChB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OACE,kBAAMC,SAZa,SAAAC,GACnBA,EAAMC,iBAEmB,KAArBJ,EAAUK,OAMdP,EAAOE,GALLM,MAAM,qCAMT,EAEC,WACE,SAACV,EAAD,CACEW,KAAK,OACLC,KAAK,YACLC,SApBc,SAAAN,GAClBF,EAAaE,EAAMO,cAAcC,MAAMC,cACxC,EAmBKD,MAAOX,KAET,SAACH,EAAD,CAAQU,KAAK,SAAb,sBAGL,E,wCC0BD,EAnDmB,WAAO,IAAD,EACvB,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOc,EAAP,KAAqBC,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpC,EAAK,UAAGmC,EAAaE,IAAI,gBAApB,QAAgC,GAErCC,GAAWC,EAAAA,EAAAA,MAiBjB,OARAC,EAAAA,EAAAA,YAAU,WACJxC,IACFD,EAAAA,EAAAA,IAAgBC,GACbyC,MAAK,SAAA5C,GAAI,OAAIoC,EAAgBpC,EAAKC,QAAzB,IACT4C,OAAM,SAAAC,GAAK,OAAIhD,QAAQC,IAAI+C,EAAhB,GAEjB,GAAE,CAAC3C,KAGF,iCACE,SAAC,EAAD,CAAQiB,OAjBa,SAAAE,GACvB,GAAkB,KAAdA,EACF,OAAOiB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEpC,MAAOmB,GAC1B,KAaG,SAAC,KAAD,UACGa,GACCA,EAAaY,KAAI,WAA6BC,GAAW,IAArCC,EAAoC,EAApCA,MAAO3C,EAA6B,EAA7BA,GAAI4C,EAAyB,EAAzBA,YAE7B,OADApD,QAAQC,IAAIO,IAEV,UAAC,KAAD,YACE,gBACE6C,IACED,EAAW,0CAC4BA,GACnCE,EAENC,IAAKJ,EACLK,MAAM,SAER,SAAC,KAAD,CAAYC,GAAE,UAAKjD,GAAMkD,MAAO,CAAEC,KAAMhB,GAAxC,SACGQ,MAXMD,EAed,QAIV,C","sources":["components/ApiUrl/ApiURL.jsx","pages/Detals.styled.js","components/Movies/Movies.styled.js","components/Movies/Movies.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const KEY = 'dc938579c590d583322532c91001c2e3';\n\nexport const ApiTrendMovies = async () => {\n  try {\n    const responce = await axios.get(`${URL}trending/movie/day?api_key=${KEY}`);\n    console.log(responce.data.results);\n    return responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiDetalsMovies = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiCastActors = async castId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${castId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiReviewsMovies = async reviewId => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${reviewId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const WrapText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  /* align-items: center;\n  justify-content: start; */\n`;\n\nexport const HomeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 80%;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid whitesmoke;\n  justify-content: space-around;\n  padding: 10px;\n  width: calc(((80%-80px) / 4));\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: whitesmoke;\n  :hover {\n    color: orangered;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 250px;\n  min-height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  /* display: block; */\n  border: none;\n  border-radius: 50%;\n  color: orangered;\n  width: 60px;\n  height: 35px;\n`;\n","import { useState } from 'react';\nimport { Button, Input } from './Movies.styled';\nimport PropTypes from 'prop-types';\nconst Movies = ({ submit }) => {\n  const [nameValue, setNameValue] = useState('');\n\n  const hendleInput = event => {\n    setNameValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n\n    if (nameValue.trim() === '') {\n      alert('Please enter the name of the movie');\n\n      return;\n    }\n\n    submit(nameValue);\n  };\n  return (\n    <form onSubmit={hendleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"nameValue\"\n        onChange={hendleInput}\n        value={nameValue}\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nMovies.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\nexport default Movies;\n","import { ApiSearchMovies } from 'components/ApiUrl/ApiURL';\nimport Movies from 'components/Movies/Movies';\n\nimport { useEffect, useState } from 'react';\nimport { Item, List, StyledLink } from './Detals.styled';\nimport image from '../images/image.jpg';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nconst MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const hendleTakeSubmit = nameValue => {\n    if (nameValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: nameValue });\n  };\n\n  useEffect(() => {\n    if (query) {\n      ApiSearchMovies(query)\n        .then(data => setSearchMovies(data.results))\n        .catch(error => console.log(error));\n    }\n  }, [query]);\n\n  return (\n    <>\n      <Movies submit={hendleTakeSubmit} />\n      <List>\n        {searchMovies &&\n          searchMovies.map(({ title, id, poster_path }, index) => {\n            console.log(id);\n            return (\n              <Item key={index}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : image\n                  }\n                  alt={title}\n                  width=\"200\"\n                />\n                <StyledLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </StyledLink>\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["URL","KEY","ApiTrendMovies","axios","responce","console","log","data","results","ApiSearchMovies","query","response","ApiDetalsMovies","id","ApiCastActors","castId","ApiReviewsMovies","reviewId","Wrap","styled","WrapText","List","Item","StyledLink","NavLink","Input","Button","submit","useState","nameValue","setNameValue","onSubmit","event","preventDefault","trim","alert","type","name","onChange","currentTarget","value","toLowerCase","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","then","catch","error","map","index","title","poster_path","src","image","alt","width","to","state","from"],"sourceRoot":""}